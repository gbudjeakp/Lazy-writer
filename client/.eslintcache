[{"C:\\Users\\gbudj\\Desktop\\projects\\lazywriter\\client\\src\\components\\Voice\\Voice.js":"1"},{"size":2534,"mtime":1614218140022,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"yokki3","C:\\Users\\gbudj\\Desktop\\projects\\lazywriter\\client\\src\\components\\Voice\\Voice.js",["7"],"import React, { useState, useEffect } from 'react'\r\nimport Header from '../Header/Header'\r\nimport { Button } from '@material-ui/core'\r\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport Notes from '../../pages/Notes/Notes'\r\nimport './style.css'\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst mic = new SpeechRecognition()\r\n\r\nmic.continuous = true\r\nmic.interimResults = true\r\nmic.lang = 'en-US'\r\n\r\nfunction Voice () {\r\n  const [isListening, setIsListening] = useState(false)\r\n  const [note, setNote] = useState('')\r\n  const [savedNotes, setSavedNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    handleListen()\r\n  }, [isListening])\r\n\r\n  const handleListen = () => {\r\n    if (isListening) {\r\n      mic.start()\r\n      mic.onend = () => {\r\n        console.log('continue..')\r\n        mic.start()\r\n      }\r\n    } else {\r\n      mic.stop()\r\n      mic.onend = () => {\r\n        console.log('Stopped Mic on Click')\r\n      }\r\n    }\r\n    mic.onstart = () => {\r\n      console.log('Mics on')\r\n    }\r\n\r\n    mic.onresult = event => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0])\r\n        .map(result => result.transcript)\r\n        .join('')\r\n      setNote(transcript)\r\n      mic.onerror = event => {\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSaveNote = () => {\r\n    setSavedNotes([...savedNotes, note])\r\n    setNote('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='note-container'>\r\n\r\n        <div classname='voice-control'>\r\n          <Button\r\n            variant='contained'\r\n            color='secondary'\r\n            startIcon={<KeyboardVoiceIcon />}\r\n            onClick={() => setIsListening(prevState => !prevState)}\r\n          >\r\n        Talk\r\n          </Button>\r\n\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSaveNote} disabled={!note}\r\n          >\r\n        Save\r\n          </Button>\r\n        </div>\r\n\r\n        {isListening ? <span>🎙️</span> : <span>🛑</span>}\r\n        <p className='note'>\r\n          {note}\r\n        </p>\r\n      </div>\r\n      <div className='savednotescontainer'>\r\n        <h1 className='insidesavednotescontainer'>Saved Notes</h1>\r\n        {savedNotes.map((note, index) => {\r\n          return (\r\n            <Notes note={note} key={index} />\r\n          )\r\n        })}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Voice\r\n",{"ruleId":"8","severity":1,"message":"9","line":24,"column":6,"nodeType":"10","endLine":24,"endColumn":19,"suggestions":"11"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleListen'. Either include it or remove the dependency array.","ArrayExpression",["12"],{"desc":"13","fix":"14"},"Update the dependencies array to be: [handleListen, isListening]",{"range":"15","text":"16"},[736,749],"[handleListen, isListening]"]